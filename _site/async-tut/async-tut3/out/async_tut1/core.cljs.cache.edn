;; Analyzed by ClojureScript 0.0-2511
{:defs {init {:protocol-inline nil, :name async-tut1.core/init, :variadic false, :file "src/async_tut1/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :column 1, :methods ({:tag cljs.core.async.impl.channels/ManyToManyChannel, :variadic false, :max-fixed-arity 0}), :line 35, :end-line 35, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, peekn {:protocol-inline nil, :name async-tut1.core/peekn, :variadic false, :file "src/async_tut1/core.cljs", :end-column 13, :method-params ([v n]), :protocol-impl nil, :column 1, :methods ({:tag #{nil cljs.core/Subvec}, :variadic false, :max-fixed-arity 2}), :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v n])), :doc "Returns vector of (up to) n items from the end of vector v"}, render-list {:protocol-inline nil, :name async-tut1.core/render-list, :variadic false, :file "src/async_tut1/core.cljs", :end-column 19, :method-params ([results]), :protocol-impl nil, :column 1, :methods ({:variadic false, :max-fixed-arity 1}), :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([results]))}, user-comment {:protocol-inline nil, :name async-tut1.core/user-comment, :variadic false, :file "src/async_tut1/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :column 1, :methods ({:variadic false, :max-fixed-arity 0}), :line 17, :end-line 17, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, listen {:protocol-inline nil, :name async-tut1.core/listen, :variadic false, :file "src/async_tut1/core.cljs", :end-column 14, :method-params ([el type]), :protocol-impl nil, :column 1, :methods ({:tag cljs.core.async.impl.channels/ManyToManyChannel, :variadic false, :max-fixed-arity 2}), :line 11, :end-line 11, :max-fixed-arity 2, :fn-var true, :arglists (quote ([el type]))}}, :imports nil, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :use-macros {go cljs.core.async.macros}, :requires {cljs.core.async cljs.core.async, date goog.date, goog.date goog.date, events goog.events, goog.events goog.events, goog.dom goog.dom, dom goog.dom}, :uses {timeout cljs.core.async, <! cljs.core.async, chan cljs.core.async, put! cljs.core.async}, :excludes #{}, :doc nil, :name async-tut1.core}