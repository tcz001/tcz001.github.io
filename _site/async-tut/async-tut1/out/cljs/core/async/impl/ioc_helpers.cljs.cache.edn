;; Analyzed by ClojureScript 0.0-2511
{:defs {EXCEPTION-FRAMES {:file "out/cljs/core/async/impl/ioc_helpers.cljs", :line 9, :column 1, :end-line 9, :end-column 31, :const true, :name cljs.core.async.impl.ioc-helpers/EXCEPTION-FRAMES}, process-exception {:protocol-inline nil, :name cljs.core.async.impl.ioc-helpers/process-exception, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 25, :method-params ([state]), :protocol-impl nil, :column 1, :methods ({:tag #{nil clj-nil}, :variadic false, :max-fixed-arity 1}), :line 93, :end-line 93, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, ExceptionFrame {:num-fields 5, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name cljs.core.async.impl.ioc-helpers/ExceptionFrame, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 27, :type true, :column 12, :internal-ctor true, :line 78, :record true, :end-line 78, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, STATE-IDX {:file "out/cljs/core/async/impl/ioc_helpers.cljs", :line 6, :column 1, :end-line 6, :end-column 24, :const true, :name cljs.core.async.impl.ioc-helpers/STATE-IDX}, ->t23137 {:protocol-inline nil, :protocols #{cljs.core.async.impl.protocols/Handler cljs.core/IMeta cljs.core/IWithMeta}, :name cljs.core.async.impl.ioc-helpers/->t23137, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :method-params ([f fn-handler meta23138]), :protocol-impl nil, :anonymous true, :column 3, :factory :positional, :methods ({:tag cljs.core.async.impl.ioc-helpers/t23137, :variadic false, :max-fixed-arity 3}), :line 27, :max-fixed-arity 3, :fn-var true, :arglists (quote ([f fn-handler meta23138])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, map->ExceptionFrame {:protocol-inline nil, :name cljs.core.async.impl.ioc-helpers/map->ExceptionFrame, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 27, :method-params ([G__23169]), :protocol-impl nil, :column 1, :internal-ctor true, :factory :map, :methods ({:tag cljs.core.async.impl.ioc-helpers/ExceptionFrame, :variadic false, :max-fixed-arity 1}), :line 78, :end-line 78, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__23169]))}, aset-object {:protocol-inline nil, :name cljs.core.async.impl.ioc-helpers/aset-object, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 19, :method-params ([arr idx o]), :protocol-impl nil, :column 1, :methods ({:variadic false, :max-fixed-arity 3}), :line 13, :end-line 13, :max-fixed-arity 3, :fn-var true, :arglists (quote ([arr idx o]))}, add-exception-frame {:protocol-inline nil, :name cljs.core.async.impl.ioc-helpers/add-exception-frame, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 27, :method-params ([state catch-block catch-exception finally-block continue-block]), :protocol-impl nil, :column 1, :methods ({:variadic false, :max-fixed-arity 5}), :line 84, :end-line 84, :max-fixed-arity 5, :fn-var true, :arglists (quote ([state catch-block catch-exception finally-block continue-block]))}, t23134 {:num-fields 3, :protocols #{cljs.core.async.impl.protocols/Handler cljs.core/IMeta cljs.core/IWithMeta}, :name cljs.core.async.impl.ioc-helpers/t23134, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :type true, :anonymous true, :column 3, :line 27, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, run-state-machine-wrapped {:protocol-inline nil, :name cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 33, :method-params ([state]), :protocol-impl nil, :column 1, :methods ({:variadic false, :max-fixed-arity 1}), :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, FN-IDX {:file "out/cljs/core/async/impl/ioc_helpers.cljs", :line 5, :column 1, :end-line 5, :end-column 21, :const true, :name cljs.core.async.impl.ioc-helpers/FN-IDX}, aget-object {:protocol-inline nil, :name cljs.core.async.impl.ioc-helpers/aget-object, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 19, :method-params ([arr idx]), :protocol-impl nil, :column 1, :methods ({:variadic false, :max-fixed-arity 2}), :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([arr idx]))}, return-chan {:protocol-inline nil, :name cljs.core.async.impl.ioc-helpers/return-chan, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 19, :method-params ([state value]), :protocol-impl nil, :column 1, :methods ({:tag not-native, :variadic false, :max-fixed-arity 2}), :line 71, :end-line 71, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state value]))}, ->ExceptionFrame {:protocol-inline nil, :name cljs.core.async.impl.ioc-helpers/->ExceptionFrame, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 27, :method-params ([catch-block catch-exception finally-block continue-block prev]), :protocol-impl nil, :column 1, :internal-ctor true, :factory :positional, :methods ({:tag cljs.core.async.impl.ioc-helpers/ExceptionFrame, :variadic false, :max-fixed-arity 5}), :line 78, :end-line 78, :max-fixed-arity 5, :fn-var true, :arglists (quote ([catch-block catch-exception finally-block continue-block prev]))}, BINDINGS-IDX {:file "out/cljs/core/async/impl/ioc_helpers.cljs", :line 8, :column 1, :end-line 8, :end-column 27, :const true, :name cljs.core.async.impl.ioc-helpers/BINDINGS-IDX}, ->t23134 {:protocol-inline nil, :protocols #{cljs.core.async.impl.protocols/Handler cljs.core/IMeta cljs.core/IWithMeta}, :name cljs.core.async.impl.ioc-helpers/->t23134, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :method-params ([f fn-handler meta23135]), :protocol-impl nil, :anonymous true, :column 3, :factory :positional, :methods ({:tag cljs.core.async.impl.ioc-helpers/t23134, :variadic false, :max-fixed-arity 3}), :line 27, :max-fixed-arity 3, :fn-var true, :arglists (quote ([f fn-handler meta23135])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, CURRENT-EXCEPTION {:file "out/cljs/core/async/impl/ioc_helpers.cljs", :line 10, :column 1, :end-line 10, :end-column 32, :const true, :name cljs.core.async.impl.ioc-helpers/CURRENT-EXCEPTION}, t23137 {:num-fields 3, :protocols #{cljs.core.async.impl.protocols/Handler cljs.core/IMeta cljs.core/IWithMeta}, :name cljs.core.async.impl.ioc-helpers/t23137, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :type true, :anonymous true, :column 3, :line 27, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, fn-handler {:protocol-inline nil, :private true, :name cljs.core.async.impl.ioc-helpers/fn-handler, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 19, :method-params ([f]), :protocol-impl nil, :column 1, :methods ({:tag cljs.core.async.impl.ioc-helpers/t23137, :variadic false, :max-fixed-arity 1}), :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, run-state-machine {:protocol-inline nil, :name cljs.core.async.impl.ioc-helpers/run-state-machine, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 25, :method-params ([state]), :protocol-impl nil, :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, ioc-alts! {:protocol-inline nil, :name cljs.core.async.impl.ioc-helpers/ioc-alts!, :variadic true, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 17, :method-params ([state cont-block ports p__23154]), :protocol-impl nil, :column 1, :methods ({:tag #{cljs.core/Keyword clj-nil}, :variadic true, :max-fixed-arity 3}), :line 60, :end-line 60, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state cont-block ports & {:as opts}]))}, finished? {:protocol-inline nil, :name cljs.core.async.impl.ioc-helpers/finished?, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 17, :method-params ([state-array]), :protocol-impl nil, :column 1, :methods ({:tag boolean, :variadic false, :max-fixed-arity 1}), :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state-array])), :doc "Returns true if the machine is in a finished state"}, USER-START-IDX {:file "out/cljs/core/async/impl/ioc_helpers.cljs", :line 11, :column 1, :end-line 11, :end-column 29, :const true, :name cljs.core.async.impl.ioc-helpers/USER-START-IDX}, put! {:protocol-inline nil, :name cljs.core.async.impl.ioc-helpers/put!, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 12, :method-params ([state blk c val]), :protocol-impl nil, :column 1, :methods ({:tag #{cljs.core/Keyword clj-nil}, :variadic false, :max-fixed-arity 4}), :line 52, :end-line 52, :max-fixed-arity 4, :fn-var true, :arglists (quote ([state blk c val]))}, take! {:protocol-inline nil, :name cljs.core.async.impl.ioc-helpers/take!, :variadic false, :file "out/cljs/core/async/impl/ioc_helpers.cljs", :end-column 13, :method-params ([state blk c]), :protocol-impl nil, :column 1, :methods ({:tag #{cljs.core/Keyword clj-nil}, :variadic false, :max-fixed-arity 3}), :line 43, :end-line 43, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state blk c]))}, VALUE-IDX {:file "out/cljs/core/async/impl/ioc_helpers.cljs", :line 7, :column 1, :end-line 7, :end-column 24, :const true, :name cljs.core.async.impl.ioc-helpers/VALUE-IDX}}, :imports nil, :require-macros {cljs.core.async.impl.ioc-macros cljs.core.async.impl.ioc-macros, ioc cljs.core.async.impl.ioc-macros}, :use-macros nil, :requires {cljs.core.async.impl.protocols cljs.core.async.impl.protocols, impl cljs.core.async.impl.protocols}, :uses nil, :excludes #{}, :doc nil, :name cljs.core.async.impl.ioc-helpers}